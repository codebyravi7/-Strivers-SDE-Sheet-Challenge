https://leetcode.com/problems/unique-paths/submissions/

class Solution {
public:
    int solve(int m ,int n,vector<vector<int>> &v){

        for(int i=m-2;i>=0;i--){
            for(int j=n-2;j>=0;j--){
                v[i][j] =v[i][j+1] +v[i+1][j];
            }
        }
        return v[0][0];
    }
    int uniquePaths(int m, int n) {
     
        if(m==1 && n==1)
        return 1;
        
        vector<vector<int>> v( m, vector<int> (n, -1));
        for(int i=0;i<m;i++)
        v[i][n-1] =1; 
        for(int i=0;i<n;i++)
        v[m-1][i] =1;

        return solve(m,n,v);
    }
};

    // Memoization +recursion
    // int solve(int a,int b,int m ,int n,vector<vector<int>> &v){
    //     if(a>m-1||b>n-1)
    //     return 0;

    //     if(v[a][b] != -1)
    //     return v[a][b];
        
    //     if((a==m-1 && b== n-1-1)||(a==m-1-1 && b== n-1))
    //     {
    //         v[a][b] =1;
    //         return v[a][b];
    //     }

    //     int right =solve(a,b+1,m,n,v);
    //     int down =solve(a+1,b,m,n,v);
    //     v[a][b] =right+down;
    //     return v[a][b];
    // }
    // int uniquePaths(int m, int n) {
     
    //     if(m==1 && n==1)
    //     return 1;

    //     vector<vector<int>> v( m, vector<int> (n, -1));
    //     // for(int i=0;i<m;i) 
    //     return solve(0,0,m,n,v);
    // }
