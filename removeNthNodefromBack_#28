/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        //backwards->nth means forward->sz-n+1.
        int sz=0;
        ListNode* cur =head;
        while(cur){
            cur=cur->next;
            sz++;
        }
        if(sz == 1)
        return NULL;
        if(sz == n)
        return head->next;
        
        cur =head;
        int i=0;
        while(i<sz-n-1){
            cur=cur->next;
            i++;
        }
        //cur will point to the node before target
        cur->next = cur->next->next;
        return head;
    }
};
