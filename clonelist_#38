/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head) return NULL;
        Node* head2 =NULL;
        Node* head1 =head;
        while(head1){
            Node* newnode =new Node(head1->val);
            if(!head2) head2 =newnode;
            Node* t =head1->next;
            head1->next =newnode;
            newnode->next =t;
            head1=newnode->next;
        }
        head1 =head;
        while(head1){
            if(head1->random == NULL)head1->next ->random =NULL;
            else head1->next ->random =head1->random->next;
            
            head1=head1->next->next;
        }
        head1 =head;
        Node* prev =head1->next;
        while(head1){
            head1->next=prev->next;
            head1 =head1->next;
            if(head1)prev->next =head1->next;
            else prev->next =NULL;
            prev =prev->next;
        }

        return head2;

    }
};
