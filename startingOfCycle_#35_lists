/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode *slow =head;
        ListNode *fast =head;
        bool flag =false;
        while(slow && fast){
            if(slow == fast)
            {
                if(flag)  {flag =false; break;}
                if(!flag) flag =true;
            }
            slow =slow->next;
            fast =fast->next;
            if(fast) fast = fast->next;

        }
        if(flag) return NULL;
        ListNode *p1 =head;
        while(true){
            if(p1==slow) return p1;
            p1 =p1->next;
            slow =slow->next;
        } 
        return NULL;
    }
};
